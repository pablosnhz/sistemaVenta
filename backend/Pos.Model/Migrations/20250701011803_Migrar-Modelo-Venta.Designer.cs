// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pos.Model.Context;

#nullable disable

namespace Pos.Model.Migrations
{
    [DbContext(typeof(PosContext))]
    [Migration("20250701011803_Migrar-Modelo-Venta")]
    partial class MigrarModeloVenta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pos.Model.Model.Categoria", b =>
                {
                    b.Property<int>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idCategoria"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)");

                    b.Property<DateTime>("fechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.HasKey("idCategoria");

                    b.HasIndex("descripcion")
                        .IsUnique();

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Pos.Model.Model.Negocio", b =>
                {
                    b.Property<int>("idNegocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idNegocio"));

                    b.Property<decimal>("descuento")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(4, 2)
                        .IsUnicode(false)
                        .HasColumnType("numeric(4,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("fechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.Property<string>("propietario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("razonSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ruc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("character varying(15)");

                    b.HasKey("idNegocio");

                    b.ToTable("Negocios");
                });

            modelBuilder.Entity("Pos.Model.Model.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idProducto"));

                    b.Property<string>("codigoBarra")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)");

                    b.Property<DateTime>("fechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.Property<int>("idCategoria")
                        .HasColumnType("integer");

                    b.Property<decimal>("precioVenta")
                        .HasPrecision(18, 2)
                        .IsUnicode(false)
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("stock")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("stockMinimo")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("integer")
                        .HasDefaultValue(5);

                    b.HasKey("idProducto");

                    b.HasIndex("codigoBarra")
                        .IsUnique();

                    b.HasIndex("descripcion")
                        .IsUnique();

                    b.HasIndex("idCategoria");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Pos.Model.Model.Rol", b =>
                {
                    b.Property<int>("idRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idRol"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)");

                    b.Property<DateTime>("fechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.HasKey("idRol");

                    b.HasIndex("descripcion")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Pos.Model.Model.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)");

                    b.Property<DateTime>("fechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.Property<int>("idRol")
                        .HasColumnType("integer");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("character varying(35)");

                    b.HasKey("idUsuario");

                    b.HasIndex("Telefono")
                        .IsUnique();

                    b.HasIndex("idRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Pos.Model.Model.Venta", b =>
                {
                    b.Property<int>("idVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idVenta"));

                    b.Property<string>("cliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("descuento")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(4, 2)
                        .IsUnicode(true)
                        .HasColumnType("numeric(4,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("factura")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime>("fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.Property<DateOnly?>("fechaAnulada")
                        .HasColumnType("date");

                    b.Property<int>("idUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("motivo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("total")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .IsUnicode(true)
                        .HasColumnType("numeric(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("usuarioAnula")
                        .HasColumnType("integer");

                    b.HasKey("idVenta");

                    b.HasIndex("idUsuario");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Pos.Model.Model.Producto", b =>
                {
                    b.HasOne("Pos.Model.Model.Categoria", "categoria")
                        .WithMany("Productos")
                        .HasForeignKey("idCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("Pos.Model.Model.Usuario", b =>
                {
                    b.HasOne("Pos.Model.Model.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("idRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Pos.Model.Model.Venta", b =>
                {
                    b.HasOne("Pos.Model.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Pos.Model.Model.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Pos.Model.Model.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
